// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: temporal/compounder/previous_compounding.proto

package types

import (
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type PreviousCompounding struct {
	Delegator   string                                 `protobuf:"bytes,1,opt,name=delegator,proto3" json:"delegator,omitempty"`
	Timestamp   time.Time                              `protobuf:"bytes,2,opt,name=timestamp,proto3,stdtime" json:"timestamp"`
	BlockHeight github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,3,opt,name=blockHeight,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"blockHeight"`
}

func (m *PreviousCompounding) Reset()         { *m = PreviousCompounding{} }
func (m *PreviousCompounding) String() string { return proto.CompactTextString(m) }
func (*PreviousCompounding) ProtoMessage()    {}
func (*PreviousCompounding) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d087eb4e48cdf20, []int{0}
}
func (m *PreviousCompounding) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PreviousCompounding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PreviousCompounding.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PreviousCompounding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PreviousCompounding.Merge(m, src)
}
func (m *PreviousCompounding) XXX_Size() int {
	return m.Size()
}
func (m *PreviousCompounding) XXX_DiscardUnknown() {
	xxx_messageInfo_PreviousCompounding.DiscardUnknown(m)
}

var xxx_messageInfo_PreviousCompounding proto.InternalMessageInfo

func (m *PreviousCompounding) GetDelegator() string {
	if m != nil {
		return m.Delegator
	}
	return ""
}

func (m *PreviousCompounding) GetTimestamp() time.Time {
	if m != nil {
		return m.Timestamp
	}
	return time.Time{}
}

func init() {
	proto.RegisterType((*PreviousCompounding)(nil), "temporal.compounder.PreviousCompounding")
}

func init() {
	proto.RegisterFile("temporal/compounder/previous_compounding.proto", fileDescriptor_8d087eb4e48cdf20)
}

var fileDescriptor_8d087eb4e48cdf20 = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xbf, 0x4e, 0xeb, 0x30,
	0x14, 0x87, 0xe3, 0x7b, 0x25, 0x44, 0xd2, 0x2d, 0x65, 0x88, 0x22, 0xe4, 0x54, 0x0c, 0xa8, 0x4b,
	0x6d, 0x09, 0x78, 0x82, 0xb0, 0xc0, 0x82, 0xaa, 0x88, 0x89, 0x05, 0xe5, 0x8f, 0x71, 0xa3, 0x26,
	0x39, 0x56, 0xec, 0x20, 0xe0, 0x29, 0xfa, 0x58, 0x65, 0xeb, 0x88, 0x18, 0x0a, 0x4a, 0x5e, 0x04,
	0x25, 0xa9, 0x9b, 0x4c, 0xf6, 0x39, 0xfe, 0xfc, 0xfb, 0x74, 0x8e, 0x45, 0x14, 0xcb, 0x05, 0x94,
	0x61, 0x46, 0x63, 0xc8, 0x05, 0x54, 0x45, 0xc2, 0x4a, 0x2a, 0x4a, 0xf6, 0x9a, 0x42, 0x25, 0x9f,
	0x75, 0x2f, 0x2d, 0x38, 0x11, 0x25, 0x28, 0xb0, 0xa7, 0x9a, 0x27, 0x03, 0xef, 0x9e, 0x71, 0xe0,
	0xd0, 0xbd, 0xd3, 0xf6, 0xd6, 0xa3, 0xae, 0xc7, 0x01, 0x78, 0xc6, 0x68, 0x57, 0x45, 0xd5, 0x0b,
	0x55, 0x69, 0xce, 0xa4, 0x0a, 0x73, 0xd1, 0x03, 0x17, 0x9f, 0xc8, 0x9a, 0x2e, 0x0f, 0xaa, 0xdb,
	0xc1, 0x64, 0x9f, 0x5b, 0x66, 0xc2, 0x32, 0xc6, 0x43, 0x05, 0xa5, 0x83, 0x66, 0x68, 0x6e, 0x06,
	0x43, 0xc3, 0xf6, 0x2d, 0xf3, 0x18, 0xe4, 0xfc, 0x9b, 0xa1, 0xf9, 0xe4, 0xca, 0x25, 0xbd, 0x8a,
	0x68, 0x15, 0x79, 0xd4, 0x84, 0x7f, 0xba, 0xdd, 0x7b, 0xc6, 0xe6, 0xc7, 0x43, 0xc1, 0xf0, 0xcd,
	0x5e, 0x5a, 0x93, 0x28, 0x83, 0x78, 0x7d, 0xc7, 0x52, 0xbe, 0x52, 0xce, 0xff, 0xd6, 0xe1, 0x93,
	0x96, 0xfc, 0xde, 0x7b, 0x97, 0x3c, 0x55, 0xab, 0x2a, 0x6a, 0x07, 0xa4, 0x31, 0xc8, 0x1c, 0xe4,
	0xe1, 0x58, 0xc8, 0x64, 0x4d, 0xd5, 0xbb, 0x60, 0x92, 0xdc, 0x17, 0x2a, 0x18, 0x47, 0xf8, 0x0f,
	0xdb, 0x1a, 0xa3, 0x5d, 0x8d, 0xd1, 0x6f, 0x8d, 0xd1, 0xa6, 0xc1, 0xc6, 0xae, 0xc1, 0xc6, 0x57,
	0x83, 0x8d, 0xa7, 0x9b, 0x51, 0x9c, 0x5e, 0xde, 0xe2, 0x03, 0x0a, 0x76, 0xac, 0xe8, 0xdb, 0x78,
	0xf9, 0x9d, 0x20, 0x3a, 0xe9, 0x46, 0xb9, 0xfe, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x4d, 0x6a, 0x51,
	0x4b, 0xa0, 0x01, 0x00, 0x00,
}

func (m *PreviousCompounding) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PreviousCompounding) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PreviousCompounding) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.BlockHeight.Size()
		i -= size
		if _, err := m.BlockHeight.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintPreviousCompounding(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	n1, err1 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.Timestamp, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.Timestamp):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintPreviousCompounding(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x12
	if len(m.Delegator) > 0 {
		i -= len(m.Delegator)
		copy(dAtA[i:], m.Delegator)
		i = encodeVarintPreviousCompounding(dAtA, i, uint64(len(m.Delegator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintPreviousCompounding(dAtA []byte, offset int, v uint64) int {
	offset -= sovPreviousCompounding(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PreviousCompounding) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Delegator)
	if l > 0 {
		n += 1 + l + sovPreviousCompounding(uint64(l))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.Timestamp)
	n += 1 + l + sovPreviousCompounding(uint64(l))
	l = m.BlockHeight.Size()
	n += 1 + l + sovPreviousCompounding(uint64(l))
	return n
}

func sovPreviousCompounding(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPreviousCompounding(x uint64) (n int) {
	return sovPreviousCompounding(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PreviousCompounding) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPreviousCompounding
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PreviousCompounding: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PreviousCompounding: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Delegator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPreviousCompounding
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPreviousCompounding
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPreviousCompounding
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Delegator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPreviousCompounding
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPreviousCompounding
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPreviousCompounding
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.Timestamp, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPreviousCompounding
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPreviousCompounding
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPreviousCompounding
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.BlockHeight.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPreviousCompounding(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPreviousCompounding
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPreviousCompounding(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPreviousCompounding
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPreviousCompounding
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPreviousCompounding
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPreviousCompounding
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPreviousCompounding
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPreviousCompounding
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPreviousCompounding        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPreviousCompounding          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPreviousCompounding = fmt.Errorf("proto: unexpected end of group")
)
