// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: temporal/icayieldmos/remote_contract_compound_settings.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type RemoteContractCompoundSettings struct {
	Id                     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ContractRemoteZone     uint64 `protobuf:"varint,2,opt,name=contractRemoteZone,proto3" json:"contractRemoteZone,omitempty"`
	RemoteDelegatorAddress string `protobuf:"bytes,3,opt,name=remoteDelegatorAddress,proto3" json:"remoteDelegatorAddress,omitempty"`
	CompoundSettings       string `protobuf:"bytes,4,opt,name=compoundSettings,proto3" json:"compoundSettings,omitempty"`
	FrequencyInSeconds     uint64 `protobuf:"varint,5,opt,name=frequencyInSeconds,proto3" json:"frequencyInSeconds,omitempty"`
	RemoteContractAddress  string `protobuf:"bytes,6,opt,name=remoteContractAddress,proto3" json:"remoteContractAddress,omitempty"`
	Creator                string `protobuf:"bytes,7,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *RemoteContractCompoundSettings) Reset()         { *m = RemoteContractCompoundSettings{} }
func (m *RemoteContractCompoundSettings) String() string { return proto.CompactTextString(m) }
func (*RemoteContractCompoundSettings) ProtoMessage()    {}
func (*RemoteContractCompoundSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_2968cc7accc312a3, []int{0}
}
func (m *RemoteContractCompoundSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RemoteContractCompoundSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RemoteContractCompoundSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RemoteContractCompoundSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoteContractCompoundSettings.Merge(m, src)
}
func (m *RemoteContractCompoundSettings) XXX_Size() int {
	return m.Size()
}
func (m *RemoteContractCompoundSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoteContractCompoundSettings.DiscardUnknown(m)
}

var xxx_messageInfo_RemoteContractCompoundSettings proto.InternalMessageInfo

func (m *RemoteContractCompoundSettings) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RemoteContractCompoundSettings) GetContractRemoteZone() uint64 {
	if m != nil {
		return m.ContractRemoteZone
	}
	return 0
}

func (m *RemoteContractCompoundSettings) GetRemoteDelegatorAddress() string {
	if m != nil {
		return m.RemoteDelegatorAddress
	}
	return ""
}

func (m *RemoteContractCompoundSettings) GetCompoundSettings() string {
	if m != nil {
		return m.CompoundSettings
	}
	return ""
}

func (m *RemoteContractCompoundSettings) GetFrequencyInSeconds() uint64 {
	if m != nil {
		return m.FrequencyInSeconds
	}
	return 0
}

func (m *RemoteContractCompoundSettings) GetRemoteContractAddress() string {
	if m != nil {
		return m.RemoteContractAddress
	}
	return ""
}

func (m *RemoteContractCompoundSettings) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*RemoteContractCompoundSettings)(nil), "temporal.icayieldmos.RemoteContractCompoundSettings")
}

func init() {
	proto.RegisterFile("temporal/icayieldmos/remote_contract_compound_settings.proto", fileDescriptor_2968cc7accc312a3)
}

var fileDescriptor_2968cc7accc312a3 = []byte{
	// 303 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0xc6, 0xeb, 0x50, 0x5a, 0xe1, 0x01, 0x21, 0x0b, 0x90, 0x27, 0xab, 0x62, 0xaa, 0x90, 0x48,
	0x06, 0xfe, 0x4c, 0x2c, 0x50, 0x16, 0x26, 0xa4, 0x76, 0xeb, 0x52, 0xa5, 0xf6, 0x51, 0x2c, 0x35,
	0xbe, 0x60, 0xbb, 0x12, 0xe5, 0x29, 0x78, 0x28, 0x06, 0xc6, 0x8e, 0x8c, 0xa8, 0x79, 0x11, 0x54,
	0x27, 0x41, 0x94, 0x96, 0xf1, 0xf2, 0xe5, 0x77, 0xf7, 0xb3, 0x3e, 0x7a, 0xed, 0x21, 0xcb, 0xd1,
	0xa6, 0xd3, 0x44, 0xcb, 0x74, 0xae, 0x61, 0xaa, 0x32, 0x74, 0x89, 0x85, 0x0c, 0x3d, 0x8c, 0x24,
	0x1a, 0x6f, 0x53, 0xe9, 0x47, 0x12, 0xb3, 0x1c, 0x67, 0x46, 0x8d, 0x1c, 0x78, 0xaf, 0xcd, 0xc4,
	0xc5, 0xb9, 0x45, 0x8f, 0xec, 0xb0, 0xa6, 0xe3, 0x5f, 0xf4, 0xc9, 0x7b, 0x44, 0x45, 0x3f, 0x6c,
	0xe8, 0x55, 0x0b, 0x7a, 0x15, 0x3f, 0xa8, 0x70, 0xb6, 0x4f, 0x23, 0xad, 0x38, 0xe9, 0x90, 0x6e,
	0xb3, 0x1f, 0x69, 0xc5, 0x62, 0xca, 0xea, 0x63, 0x25, 0x39, 0x44, 0x03, 0x3c, 0x0a, 0xf9, 0x96,
	0x84, 0x5d, 0xd1, 0xe3, 0xd2, 0xf1, 0x0e, 0xa6, 0x30, 0x49, 0x3d, 0xda, 0x1b, 0xa5, 0x2c, 0x38,
	0xc7, 0x77, 0x3a, 0xa4, 0xbb, 0xd7, 0xff, 0x27, 0x65, 0xa7, 0xf4, 0x40, 0xfe, 0x71, 0xe1, 0xcd,
	0x40, 0x6c, 0x7c, 0x5f, 0x39, 0x3d, 0x5a, 0x78, 0x9e, 0x81, 0x91, 0xf3, 0x7b, 0x33, 0x00, 0x89,
	0x46, 0x39, 0xbe, 0x5b, 0x3a, 0x6d, 0x26, 0xec, 0x82, 0x1e, 0xd9, 0xb5, 0x57, 0xd7, 0x4a, 0xad,
	0x70, 0x60, 0x7b, 0xc8, 0x38, 0x6d, 0x4b, 0x0b, 0x2b, 0x47, 0xde, 0x0e, 0xff, 0xd5, 0xe3, 0xed,
	0xc3, 0xc7, 0x52, 0x90, 0xc5, 0x52, 0x90, 0xaf, 0xa5, 0x20, 0x6f, 0x85, 0x68, 0x2c, 0x0a, 0xd1,
	0xf8, 0x2c, 0x44, 0x63, 0x78, 0x39, 0xd1, 0xfe, 0x69, 0x36, 0x8e, 0x25, 0x66, 0x49, 0xdd, 0xc0,
	0xd9, 0x2b, 0x1a, 0xf8, 0x99, 0x92, 0x97, 0xb5, 0x3e, 0xfd, 0x3c, 0x07, 0x37, 0x6e, 0x85, 0xd2,
	0xce, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x50, 0xca, 0x8c, 0x5e, 0xf4, 0x01, 0x00, 0x00,
}

func (m *RemoteContractCompoundSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RemoteContractCompoundSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RemoteContractCompoundSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintRemoteContractCompoundSettings(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.RemoteContractAddress) > 0 {
		i -= len(m.RemoteContractAddress)
		copy(dAtA[i:], m.RemoteContractAddress)
		i = encodeVarintRemoteContractCompoundSettings(dAtA, i, uint64(len(m.RemoteContractAddress)))
		i--
		dAtA[i] = 0x32
	}
	if m.FrequencyInSeconds != 0 {
		i = encodeVarintRemoteContractCompoundSettings(dAtA, i, uint64(m.FrequencyInSeconds))
		i--
		dAtA[i] = 0x28
	}
	if len(m.CompoundSettings) > 0 {
		i -= len(m.CompoundSettings)
		copy(dAtA[i:], m.CompoundSettings)
		i = encodeVarintRemoteContractCompoundSettings(dAtA, i, uint64(len(m.CompoundSettings)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.RemoteDelegatorAddress) > 0 {
		i -= len(m.RemoteDelegatorAddress)
		copy(dAtA[i:], m.RemoteDelegatorAddress)
		i = encodeVarintRemoteContractCompoundSettings(dAtA, i, uint64(len(m.RemoteDelegatorAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if m.ContractRemoteZone != 0 {
		i = encodeVarintRemoteContractCompoundSettings(dAtA, i, uint64(m.ContractRemoteZone))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintRemoteContractCompoundSettings(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintRemoteContractCompoundSettings(dAtA []byte, offset int, v uint64) int {
	offset -= sovRemoteContractCompoundSettings(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *RemoteContractCompoundSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovRemoteContractCompoundSettings(uint64(m.Id))
	}
	if m.ContractRemoteZone != 0 {
		n += 1 + sovRemoteContractCompoundSettings(uint64(m.ContractRemoteZone))
	}
	l = len(m.RemoteDelegatorAddress)
	if l > 0 {
		n += 1 + l + sovRemoteContractCompoundSettings(uint64(l))
	}
	l = len(m.CompoundSettings)
	if l > 0 {
		n += 1 + l + sovRemoteContractCompoundSettings(uint64(l))
	}
	if m.FrequencyInSeconds != 0 {
		n += 1 + sovRemoteContractCompoundSettings(uint64(m.FrequencyInSeconds))
	}
	l = len(m.RemoteContractAddress)
	if l > 0 {
		n += 1 + l + sovRemoteContractCompoundSettings(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovRemoteContractCompoundSettings(uint64(l))
	}
	return n
}

func sovRemoteContractCompoundSettings(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRemoteContractCompoundSettings(x uint64) (n int) {
	return sovRemoteContractCompoundSettings(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *RemoteContractCompoundSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRemoteContractCompoundSettings
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RemoteContractCompoundSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RemoteContractCompoundSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRemoteContractCompoundSettings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContractRemoteZone", wireType)
			}
			m.ContractRemoteZone = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRemoteContractCompoundSettings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ContractRemoteZone |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoteDelegatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRemoteContractCompoundSettings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRemoteContractCompoundSettings
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRemoteContractCompoundSettings
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RemoteDelegatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompoundSettings", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRemoteContractCompoundSettings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRemoteContractCompoundSettings
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRemoteContractCompoundSettings
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CompoundSettings = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FrequencyInSeconds", wireType)
			}
			m.FrequencyInSeconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRemoteContractCompoundSettings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FrequencyInSeconds |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoteContractAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRemoteContractCompoundSettings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRemoteContractCompoundSettings
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRemoteContractCompoundSettings
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RemoteContractAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRemoteContractCompoundSettings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRemoteContractCompoundSettings
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRemoteContractCompoundSettings
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRemoteContractCompoundSettings(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRemoteContractCompoundSettings
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRemoteContractCompoundSettings(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRemoteContractCompoundSettings
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRemoteContractCompoundSettings
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRemoteContractCompoundSettings
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRemoteContractCompoundSettings
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRemoteContractCompoundSettings
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRemoteContractCompoundSettings
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRemoteContractCompoundSettings        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRemoteContractCompoundSettings          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRemoteContractCompoundSettings = fmt.Errorf("proto: unexpected end of group")
)
