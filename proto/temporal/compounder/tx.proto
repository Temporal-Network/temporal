syntax = "proto3";

package temporal.compounder;

import "temporal/compounder/compound_settings.proto";
import "temporal/compounder/frequency.proto";
import "temporal/compounder/validator_setting.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/temporal-zone/temporal/x/compounder/types";

// Msg defines the Msg service.
service Msg {
  rpc CreateCompoundSettings (MsgCreateCompoundSettings) returns (MsgCreateCompoundSettingsResponse);
  rpc UpdateCompoundSettings (MsgUpdateCompoundSettings) returns (MsgUpdateCompoundSettingsResponse);
  rpc DeleteCompoundSettings (MsgDeleteCompoundSettings) returns (MsgDeleteCompoundSettingsResponse);
}
message MsgCreateCompoundSettings {
  string                   delegator         = 1;
  repeated ValidatorSetting         validatorSettings = 2;
  cosmos.base.v1beta1.Coin amountToRemain    = 3 [(gogoproto.nullable) = false];
  Frequency                frequency         = 4;
}

message MsgCreateCompoundSettingsResponse {}

message MsgUpdateCompoundSettings {
  string                   delegator         = 1;
  repeated ValidatorSetting         validatorSettings = 2;
  cosmos.base.v1beta1.Coin amountToRemain    = 3 [(gogoproto.nullable) = false];
  Frequency                frequency         = 4;
}

message MsgUpdateCompoundSettingsResponse {}

message MsgDeleteCompoundSettings {
  string delegator = 1;
}

message MsgDeleteCompoundSettingsResponse {}

